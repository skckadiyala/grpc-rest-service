package insecure

import (
	"crypto/tls"
	"crypto/x509"
	"log"
)

const certPEM = `-----BEGIN CERTIFICATE-----
MIIFfDCCBGSgAwIBAgISAxWKO5JUyyKSLMQ8Mb7lHGcuMA0GCSqGSIb3DQEBCwUA
MEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD
ExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTA0MTgxNzIzMThaFw0x
OTA3MTcxNzIzMThaMC0xKzApBgNVBAMTImJsb2ctc3ZjLmFwaWNzeXN0ZXN0LmF4
d2F5dGVzdC5uZXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/TVlM
1/Mb07c2mHT44UwPZeCAhZAU/oWfe7DDyWshefKnWW/PJYTr9n++Wy99AwOjraOl
5T0yTEWq/hJcDd2sWnyZDSB087oSg+LbkK9dwy+x5Kjv0m8cDrp6Maa0CXXWDX4q
QJbTBkBge9EVCKjVETME+rndQfhAYgie/Qv5dHRNqvItbK4frpkGVoKqjfhnLkds
jnkTaLrs5KQj3b6N5gfJmHbCM83LRtgs5efOhqInAw6AnsYCFVh8/bxqYhZXUm06
P2r0rifIgaZcmozYBEHGP1HDwUhzKO9Ik2izfjh13I9+ONj913Mmr0iAYuO/+RqR
Pfovx+zgATQ0b1CfAgMBAAGjggJ3MIICczAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0l
BBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYE
FJd6d0wwAcm8fq5PFOiAtmb1d5Z9MB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZF
Ze/zqOyhMG8GCCsGAQUFBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3Au
aW50LXgzLmxldHNlbmNyeXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQu
aW50LXgzLmxldHNlbmNyeXB0Lm9yZy8wLQYDVR0RBCYwJIIiYmxvZy1zdmMuYXBp
Y3N5c3Rlc3QuYXh3YXl0ZXN0Lm5ldDBMBgNVHSAERTBDMAgGBmeBDAECATA3Bgsr
BgEEAYLfEwEBATAoMCYGCCsGAQUFBwIBFhpodHRwOi8vY3BzLmxldHNlbmNyeXB0
Lm9yZzCCAQQGCisGAQQB1nkCBAIEgfUEgfIA8AB2AHR+2oMxrTMQkSGcziVPQnDC
v/1eQiAIxjc1eeYQe8xWAAABajGwTJ0AAAQDAEcwRQIgQdJW8zXU8F3OmgwrzAP3
Ws4NT3N/JndXvAc8KnlfIJkCIQDBqVCZbBQRE3T0+FA3ZNSXdgXaKp7ReSB2h/P3
0iZDrAB2AGPy283oO8wszwtyhCdXazOkjWF3j711pjixx2hUS9iNAAABajGwTFkA
AAQDAEcwRQIhAOk6Q6V/DVpG1tftHze1/0zqKR1GpmLrI1NpJquR6HyBAiAyrckP
azQhGrikWlpwqaO7yAlumRtH6uosRuR7Vsts2DANBgkqhkiG9w0BAQsFAAOCAQEA
RGQIiQhocYFOumiJSYjEnn3gtmZdK9v13G3xdFbaBAWIo5IRTW3sEaHZW8S0j5h3
IdR5rjFeiiPrkUtJDFU2tLbVqsz7Wgaus9+gneszrjcK599ge9x4ZTF+FnnLZVCM
LVnZhZ8s7dZkrKr6ih9y+2clW6cPVtUfI1ByvbCcl31XRTPFXxZpM4GxXBSgUbhd
bKxcLOuLRjCUtAPFWsnpYERQXCV3qPVFm4ss5Ibosa8kCnh9THxhcL3zuhwFbGSr
eDLBqFFZ/0KPlTm2yK6daIwUeRHN9NcRabihMjpIobjeKg/81BCBML7OgAp0jAHr
p7bpUG6q0HhT4siEQ9ySQQ==
-----END CERTIFICATE-----
`

const keyPEM = `-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC/TVlM1/Mb07c2
mHT44UwPZeCAhZAU/oWfe7DDyWshefKnWW/PJYTr9n++Wy99AwOjraOl5T0yTEWq
/hJcDd2sWnyZDSB087oSg+LbkK9dwy+x5Kjv0m8cDrp6Maa0CXXWDX4qQJbTBkBg
e9EVCKjVETME+rndQfhAYgie/Qv5dHRNqvItbK4frpkGVoKqjfhnLkdsjnkTaLrs
5KQj3b6N5gfJmHbCM83LRtgs5efOhqInAw6AnsYCFVh8/bxqYhZXUm06P2r0rifI
gaZcmozYBEHGP1HDwUhzKO9Ik2izfjh13I9+ONj913Mmr0iAYuO/+RqRPfovx+zg
ATQ0b1CfAgMBAAECggEBAK6s8OpSkMAK7FLkmIIcLfgtXPXdfvc8hERgi8HqK3EQ
ybl217n8l0dh97iXyF/MnckZpsC29c70h/SfM6JsYsmaggS6ULWZSoDXfhBgJ1Bl
BirYEE2TBzNGW41xwrbHoJoIDfiEq3MaVTQEOqCLHKYYo05bpdTbBNO88AREKGfo
EBttkRqEDNZzdqmxAxgC9YIMZCP2mQ0p05Z+dZgwyZLe6Ina24gO0bGkQ1xxJEVN
FB7mFi9AHLgO2qw95WRDFZuHnSuApWTQ3gjKvfteBvgxgTBWavvOspeP26Wtr6+g
s6YzmemwgXLPsYnxYlwIT/pBDdvLkE6KlN3YTld4xCkCgYEA91DwAQkgtntN/CAJ
jraDnnVlF+oY/VHaz/TmARmM2hl8coC2uT+iBeTffL7e6LnCs3AarwDxFeeL5Zti
63VXDmwT5pBPBPw0N2bt9HOVD+6YC8AIxnMd1GGMJea21pw1HZMbpBrMkmMcoMhc
y5QrWzSJafSBKJrXZkyHWZTSHtUCgYEAxgTqW2lLxxFH/yxZmppRUSG62nyvSsHA
beZhxmL8CgnYZhc895Aagt0ovokIPy9iyShx7XeVTay0jQCZyWxHDmBG0W4T5uP6
svAKKHqaEwsJh1hzZ+5AA4a4ipvcgUOkfHwKvGbdbat294L5+qSVSkEoPPp8+1w+
YAMoJLGcc6MCgYB99zeHD4Md7sfVtuunSMbZGqoW+CEqRVrRuMa9oKnhHEIKgAyR
Zhu8LMq32u/mUVcd1eeBY1Vn9ruGgxJrIyToL5wjPzVAMMTXwxFIBObTao7+zRyr
F08GMXkUhOJzhLR5D8hwWUYA+YJHUkYRWrKKjcO/t81hRRyY+jmmIuqy0QKBgQC4
clmtvf3Utjce67um83ktHkMDQsKw2pqYg9CtTwQ/gX4tUhX67yKSpNhP6iphWI0m
nGLKc+oBiQ5AjL+yzAW/0VQFvggRuGeLh2We4NxlQpGknXIZ6+V6o2F/0sBpM42i
WpRRe2tjvSQ6Vqjsm6NnoBuP+S6zn++F1UruKvZ1CwKBgGs9WfoKBhQ5G+FK3CH6
0DMTZ5kOlhRki9BEVP1uDp49lbOkfgVLE9VZsjaMc2cStNNZbWadfalmw6Tl74uO
EQR6XapYDKhcl89NcIyY4uVHt0uu5VK5ngcdkdHeWangqb3qBd6+7HjjNOI4jAb4
rZL5BxVPMMlRABf/NCDA8SqQ
-----END PRIVATE KEY-----
`

var (
	// Cert is a self signed certificate
	Cert tls.Certificate
	// CertPool contains the self signed certificate
	CertPool *x509.CertPool
)

func init() {
	var err error
	Cert, err = tls.X509KeyPair([]byte(certPEM), []byte(keyPEM))
	if err != nil {
		log.Fatalln("Failed to parse key pair:", err)
	}
	Cert.Leaf, err = x509.ParseCertificate(Cert.Certificate[0])
	if err != nil {
		log.Fatalln("Failed to parse certificate:", err)
	}

	CertPool = x509.NewCertPool()
	CertPool.AddCert(Cert.Leaf)
}
